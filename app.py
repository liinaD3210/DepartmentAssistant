# app.py
import streamlit as st
import asyncio
from datetime import datetime

# --- –ò–º–ø–æ—Ä—Ç—ã ---
from src.department_assistant.services import llm_router, faq_service, task_service, llm_service
from src.department_assistant.core.models import Intent, TaskInfo, MeetingInfo

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ ---
st.set_page_config(page_title="DepartmentAssistant Demo", page_icon="ü§ñ", layout="wide")

if "event_loop" not in st.session_state:
    st.session_state.event_loop = asyncio.new_event_loop()
    asyncio.set_event_loop(st.session_state.event_loop)
loop = st.session_state.event_loop

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ---
DEMO_CHAT_ID = -100123456789
if "history" not in st.session_state:
    st.session_state.history = [
        # --- –ù–∞—á–∞–ª–æ –¥–Ω—è. –ü—Ä–æ–±–ª–µ–º–∞ ---
        {
            "role": "user",
            "name": "–ê–Ω–Ω–∞ (–ú–µ–Ω–µ–¥–∂–µ—Ä)",
            "content": "–í—Å–µ–º –¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ! ‚òÄÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞—é, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –≤ 10:00 —É –Ω–∞—Å –¥–µ–º–æ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤. @maria, –∫–∞–∫ –¥–µ–ª–∞ —Å –º–∞–∫–µ—Ç–∞–º–∏ –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏? –î–µ–¥–ª–∞–π–Ω –±—ã–ª –≤—á–µ—Ä–∞, –∑–∞–¥–∞—á–∞ #14 –≥–æ—Ä–∏—Ç –∫—Ä–∞—Å–Ω—ã–º."
        },
        {
            "role": "user",
            "name": "–ú–∞—Ä–∏—è (–î–∏–∑–∞–π–Ω–µ—Ä)",
            "content": "–ê–Ω–Ω–∞, –ø—Ä–∏–≤–µ—Ç! –ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è, –≤—á–µ—Ä–∞ –≤–µ—Å—å –≤–µ—á–µ—Ä –Ω–µ –º–æ–≥–ª–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –Ω–∞—à–µ–º—É S3 —Ö—Ä–∞–Ω–∏–ª–∏—â—É, –≥–¥–µ –ª–µ–∂–∞—Ç –∏—Å—Ö–æ–¥–Ω–∏–∫–∏. –ö–∞–∫–∏–µ —Ç–∞–º —Å–µ–π—á–∞—Å –ø—Ä–∞–≤–∏–ª–∞ –¥–æ—Å—Ç—É–ø–∞?"
        },

        {
            "role": "bot",
            "content": "–°–æ–≥–ª–∞—Å–Ω–æ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π, –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ S3-—Ö—Ä–∞–Ω–∏–ª–∏—â—É 'omega-assets' —Ç–µ–ø–µ—Ä—å —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π VPN 'Innovate-Secure'. (–ò—Å—Ç–æ—á–Ω–∏–∫: –†–µ–≥–ª–∞–º–µ–Ω—Ç_–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.pdf)"
        },
        {
            "role": "user",
            "name": "–ú–∞—Ä–∏—è (–î–∏–∑–∞–π–Ω–µ—Ä)",
            "content": "–ê, —Ç–æ—á–Ω–æ! –¢–æ–≥–¥–∞ —è —Å–µ–π—á–∞—Å –±—ã—Å—Ç—Ä–æ –≤—Å–µ –¥–æ–¥–µ–ª–∞—é. –ö 12 —á–∞—Å–∞–º –º–∞–∫–µ—Ç—ã –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã."
        },

        # --- –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ---
        {
            "role": "bot_proposal",
            "type": "task",
            "content": '–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É "–§–∏–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–∞–∫–µ—Ç—ã –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤"?\n<b>–î–µ–¥–ª–∞–π–Ω:</b> —Å–µ–≥–æ–¥–Ω—è –≤ 12:00\n<b>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ:</b> @maria',
            "id": "prop_hist_1"
        },
        # –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–º–∏—Ç–∏—Ä—É–µ—Ç —Ç–æ, —á—Ç–æ –ø–æ—è–≤–∏—Ç—Å—è –ü–û–°–õ–ï —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º–µ—Ç "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
        # –î–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ–≥–æ –º–æ–∂–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã –∏—Å—Ç–æ—Ä–∏–∏ –æ–Ω–æ –∑–¥–µ—Å—å
        {
            "role": "bot",
            "content": "‚úÖ –ó–∞–¥–∞—á–∞ #17: \"–§–∏–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–∞–∫–µ—Ç—ã –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤\" —Å–æ–∑–¥–∞–Ω–∞. –ú–∞—Ä–∏—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∞."
        },

        # --- –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ ---
        {
            "role": "user",
            "name": "–ê–Ω–Ω–∞ (–ú–µ–Ω–µ–¥–∂–µ—Ä)",
            "content": "–û—Ç–ª–∏—á–Ω–æ! –¢–æ–≥–¥–∞ –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ–¥–µ–º —Ä–µ–≤—å—é –º–∞–∫–µ—Ç–æ–≤ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ. –ü—Ä–µ–¥–ª–∞–≥–∞—é —Å–æ–∑–≤–æ–Ω —Å–µ–≥–æ–¥–Ω—è –≤ 12:30."
        },
        {
            "role": "bot_proposal",
            "type": "meeting",
            "content": '–°–æ–∑–¥–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É "–†–µ–≤—å—é –º–∞–∫–µ—Ç–æ–≤ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤" —Å–µ–≥–æ–¥–Ω—è –≤ 12:30‚Äì13:30?',
            "id": "prop_hist_2"
        },
        {
            "role": "bot",
            "content": "‚úÖ –í—Å—Ç—Ä–µ—á–∞ \"–†–µ–≤—å—é –º–∞–∫–µ—Ç–æ–≤ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤\" —Å–æ–∑–¥–∞–Ω–∞. –ê–Ω–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∞."
        },

        # --- –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ –¥–Ω—è (–∏–¥–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π) ---
        {
            "role": "bot_summary",
            "content": """
            üìù **–°–≤–æ–¥–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å (30.06.2025):**
            - **–ö–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è:**
                - –†–µ—à–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ S3 –±–ª–∞–≥–æ–¥–∞—Ä—è –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.
                - –ù–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞ "–†–µ–≤—å—é –º–∞–∫–µ—Ç–æ–≤ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤" –Ω–∞ 12:30.
            - **–ó–∞–¥–∞—á–∏:**
                - üÜï –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞ #17: '–§–∏–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–∞–∫–µ—Ç—ã –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤' –¥–ª—è @maria —Å –¥–µ–¥–ª–∞–π–Ω–æ–º —Å–µ–≥–æ–¥–Ω—è.
            - **–û–±—Å—É–∂–¥–µ–Ω–∏—è:**
                - –ì–ª–∞–≤–Ω–∞—è —Ç–µ–º–∞: —Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–º–æ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤.
            """
        },
    ]
    
if "prompt_to_run" not in st.session_state:
    st.session_state.prompt_to_run = None

if 'show_welcome' not in st.session_state:
    st.session_state.show_welcome = True


if st.session_state.show_welcome:
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º st.container() —á—Ç–æ–±—ã –≤–∏–∑—É–∞–ª—å–Ω–æ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã
    with st.container():
        st.header("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—é DepartmentAssistant! üëã")
        st.markdown("""
            ### –õ–µ–≥–µ–Ω–¥–∞
            –í—ã ‚Äî –Ω–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ **"Innovate Forward Inc."** –∏ –≤–∞—Å –¥–æ–±–∞–≤–∏–ª–∏ –≤ 
            –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–∞–±–æ—á–∏–π —á–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞ "–û–º–µ–≥–∞". –í —á–∞—Ç–µ —É–∂–µ –∫–∏–ø–∏—Ç —Ä–∞–±–æ—Ç–∞: —Å—Ç–∞–≤—è—Ç—Å—è –∑–∞–¥–∞—á–∏, 
            –æ–±—Å—É–∂–¥–∞—é—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã, –ø–ª–∞–Ω–∏—Ä—É—é—Ç—Å—è –≤—Å—Ç—Ä–µ—á–∏. –ö–æ–º–∞–Ω–¥–µ –ø–æ–º–æ–≥–∞–µ—Ç 
            `DepartmentAssistant`, –∫–æ—Ç–æ—Ä—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
            
            **–í–∞—à–∞ –∑–∞–¥–∞—á–∞** ‚Äî –æ—Å–≤–æ–∏—Ç—å—Å—è –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º, 
            –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –º–µ–Ω—é —Å–ª–µ–≤–∞ –∏–ª–∏ —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã.
        """)
        st.success("–í—Å–µ –≤–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è (—Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á –∏ —Ç.–¥.) –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")
        
        # –ö–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–∫—Ä–æ–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if st.button("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É!", type="primary"):
            st.session_state.show_welcome = False
            st.rerun() # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å –±–ª–æ–∫
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞–ª—å–Ω–æ–π —á–∞—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç–∞
    st.markdown("---")
    st.stop()

# --- –°–∞–π–¥–±–∞—Ä —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ ---
with st.sidebar:
    st.title("–ú–µ–Ω—é –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")
    st.info("–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ø—Ä–∏–º–µ—Ä, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ.")

    def set_prompt_to_run(text):
        st.session_state.prompt_to_run = text

    st.subheader("‚ùì –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", divider="blue")
    if st.button("–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –æ—Ç–ø—É—Å–∫?", use_container_width=True): set_prompt_to_run("–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –æ—Ç–ø—É—Å–∫?")
    if st.button("–ö–∞–∫–æ–π —É –Ω–∞—Å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –Ω–æ—É—Ç–±—É–∫?", use_container_width=True): set_prompt_to_run("–ö–∞–∫–æ–π —É –Ω–∞—Å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –Ω–æ—É—Ç–±—É–∫?")

    st.subheader("‚úîÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏", divider="green")
    if st.button("–°–æ–∑–¥–∞—Ç—å: '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é'", use_container_width=True): set_prompt_to_run("–ù—É–∂–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é –Ω–∞ stage –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è @daniil")
    if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏", use_container_width=True): set_prompt_to_run("/tasks")
    if st.button("–ó–∞–∫—Ä—ã—Ç—å –∑–∞–¥–∞—á—É #14", use_container_width=True): set_prompt_to_run("/close 14")

    st.subheader("üìÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∞–º–∏ (–≤—Ä–µ–º—è –ú–°–ö)", divider="orange")
    if st.button("–°–æ–∑–¥–∞—Ç—å: '–°–∏–Ω–∫ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –Ω–µ–¥–µ–ª–∏'", use_container_width=True): set_prompt_to_run("–¥–∞–≤–∞–π—Ç–µ —Å–æ–∑–≤–æ–Ω–∏–º—Å—è –≤ –ø—è—Ç–Ω–∏—Ü—É –≤ 16:00 –Ω–∞ —Å–∏–Ω–∫ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –Ω–µ–¥–µ–ª–∏")

    st.divider() # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è —á–µ—Ä—Ç–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è

    st.subheader("üí° –û –ø—Ä–æ–µ–∫—Ç–µ", anchor=False)

    st.markdown(
        """
        –≠—Ç–æ **—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è (Proof of Concept)**, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è 
        –∫–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.
        """
    )

    st.info(
        """
        **–û—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è** ‚Äî –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –≤–∞—à —Ä–∞–±–æ—á–∏–π —á–∞—Ç **Telegram**, 
        –≥–¥–µ –æ–Ω –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—É—Ç–∏–Ω—É –∏ –ø–æ–º–æ–≥–∞—Ç—å –∫–æ–º–∞–Ω–¥–µ.
        
        –ú—ã —Ç–∞–∫–∂–µ –æ—Ç–∫—Ä—ã—Ç—ã –∫ –æ–±—Å—É–∂–¥–µ–Ω–∏—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏ (Bitrix, Notion, Google Calendar...).
        """, 
        icon="üöÄ"
    )
    
    st.caption("v0.1.0-demo")

# --- –û—Å–Ω–æ–≤–Ω–æ–π UI —á–∞—Ç–∞ ---
st.header("üí¨ –†–∞–±–æ—á–∏–π —á–∞—Ç: #general")

async def process_user_input(user_input: str):
    st.session_state.history.append({"role": "user", "name": "–í—ã", "content": user_input})
    with st.chat_message("assistant", avatar="ü§ñ"):
        with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é..."):
            # ... (–ö–æ–¥ process_user_input –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–∞–∫–∏–º –∂–µ, –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏)
            # –Ø —Å–∫–æ–ø–∏—Ä—É—é –µ–≥–æ —Å—é–¥–∞ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã.
            response_text, is_html = "", False
            if user_input.startswith('/tasks'):
                tasks = await task_service.get_active_tasks_for_chat(DEMO_CHAT_ID)
                if not tasks: response_text = "üéâ –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!"
                else:
                    lines = ["<b>üìù –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏:</b>"]
                    for task in tasks:
                        deadline_dt = task.deadline.astimezone(datetime.now().astimezone().tzinfo) if task.deadline else None
                        is_overdue = deadline_dt and deadline_dt < datetime.now().astimezone()
                        deadline_str = f" (–¥–æ {deadline_dt.strftime('%d.%m.%Y')}){'‚ùóÔ∏è' if is_overdue else ''}" if deadline_dt else ""
                        assignees_str = f" {task.assignees}" if task.assignees else ""
                        lines.append(f"\n‚Ä¢ <code>#{task.id}</code>: {task.title}{assignees_str}{deadline_str}")
                    response_text, is_html = "\n".join(lines), True
            elif user_input.startswith('/close'):
                try:
                    task_id = int(user_input.split()[1])
                    closed_task = await task_service.close_task(task_id, DEMO_CHAT_ID)
                    response_text, is_html = (f"‚úÖ –ó–∞–¥–∞—á–∞ <code>#{task_id}</code>: \"{closed_task.title}\" –∑–∞–∫—Ä—ã—Ç–∞." if closed_task else f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–∫—Ç–∏–≤–Ω—É—é –∑–∞–¥–∞—á—É —Å ID <code>#{task_id}</code>."), True
                except (IndexError, ValueError): response_text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. –ü—Ä–∏–º–µ—Ä: `/close 14`"
            else:
                intent = await llm_router.classify_intent(user_input)
                if intent == Intent.FAQ_QUESTION:
                    context = await faq_service.find_similar_faq(user_input)
                    response_text = await llm_service.generate_answer_from_context(user_input, context)
                elif intent in [Intent.TASK_CREATION, Intent.MEETING_CREATION]:
                    prop_type = "task" if intent == Intent.TASK_CREATION else "meeting"
                    info = await (llm_router.extract_task_info if prop_type == "task" else llm_router.extract_meeting_info)(user_input)
                    if info:
                        st.session_state[f'proposed_{prop_type}'] = info
                        content = ""
                        if isinstance(info, TaskInfo):
                            lines = [f'C–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É "{info.title}"?']
                            if info.deadline_str: lines.append(f"<b>–î–µ–¥–ª–∞–π–Ω:</b> {info.deadline_str}")
                            if info.assignees: lines.append(f"<b>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ:</b> {' '.join(info.assignees)}")
                            content = "\n".join(lines)
                        elif isinstance(info, MeetingInfo):
                            start_str, end_str = info.start_time.strftime('%d.%m.%Y %H:%M'), info.end_time.strftime('%H:%M')
                            content = f"–°–æ–∑–¥–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É \"{info.title}\" –Ω–∞ {start_str}‚Äì{end_str}?"
                        st.session_state.history.append({"role": "bot_proposal", "type": prop_type, "content": content, "id": f"prop_{len(st.session_state.history)}"})
                        return
                else: return
            st.session_state.history.append({"role": "bot", "content": response_text, "html": is_html})

for i, msg in enumerate(st.session_state.history):
    #avatar = "üßë‚Äçüíª" if msg.get("name") not in [None, "–í—ã"] else "üòé" if msg.get("name") == "–í—ã" else "ü§ñ"
    role = "user" if msg["role"] == "user" else "assistant"
    with st.chat_message(role):
        if msg["role"] == "user":
            st.write(f"**{msg['name']}**")
            # –§–ò–ö–° 1: –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            st.write(msg["content"])
        elif msg["role"] == "bot_summary":
            st.info(msg["content"], icon="‚ÑπÔ∏è")
        elif msg["role"] == "bot_proposal":
            st.write(msg["content"], unsafe_allow_html=True)
            prop_id = msg["id"]
            col1, col2, _ = st.columns([1.5, 1, 5])
            if col1.button("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", key=f"confirm_{prop_id}", use_container_width=True):
                if msg["type"] == "task":
                    info = st.session_state.get('proposed_task')
                    if info:
                        created_task = loop.run_until_complete(task_service.create_task(info, DEMO_CHAT_ID, None))
                        # –£–õ–£–ß–®–ï–ù–ò–ï 3: –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        msg["role"] = "bot"
                        msg["content"] = f"‚úÖ –ó–∞–¥–∞—á–∞ #{created_task.id}: \"{created_task.title}\" —Å–æ–∑–¥–∞–Ω–∞. –í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏."
                        if 'proposed_task' in st.session_state: del st.session_state['proposed_task']
                else: # meeting
                    info = st.session_state.get('proposed_meeting')
                    if info:
                        msg["role"] = "bot"
                        msg["content"] = f"‚úÖ –í—Å—Ç—Ä–µ—á–∞ \"{info.title}\" –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞. –í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏."
                        if 'proposed_meeting' in st.session_state: del st.session_state['proposed_meeting']
                st.rerun()
            if col2.button("‚ùå –û—Ç–º–µ–Ω–∞", key=f"cancel_{prop_id}", use_container_width=True):
                # –£–õ–£–ß–®–ï–ù–ò–ï 3: –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                msg["role"] = "bot"
                msg["content"] = "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ."
                st.rerun()
        else: # role == "bot"
            st.write(msg["content"], unsafe_allow_html=msg.get("html", False))

# --- –ü–æ–ª–µ –≤–≤–æ–¥–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π ---
# –§–ò–ö–° 2: –õ–æ–≥–∏–∫–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–∞–π–¥–±–∞—Ä–∞
if st.session_state.prompt_to_run:
    user_input = st.session_state.prompt_to_run
    st.session_state.prompt_to_run = None # –û—á–∏—â–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª–æ—Å—å –ø–æ–≤—Ç–æ—Ä–Ω–æ
    loop.run_until_complete(process_user_input(user_input))
    st.rerun()
else:
    user_input = st.chat_input("–°–ø—Ä–æ—Å–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å, —Å–æ–∑–¥–∞–π—Ç–µ –∑–∞–¥–∞—á—É –∏–ª–∏ –≤—Å—Ç—Ä–µ—á—É...")
    if user_input:
        loop.run_until_complete(process_user_input(user_input))
        st.rerun()