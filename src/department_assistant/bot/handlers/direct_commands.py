# src/department_assistant/bot/handlers/direct_commands.py
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
from ...storage.database import check_postgres
from ...storage.s3_storage import check_minio

router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø DepartmentAssistant. –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /healthcheck")

@router.message(Command("healthcheck"))
async def cmd_healthcheck(message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
    is_postgres_ok = await check_postgres()
    is_minio_ok = await check_minio()

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    postgres_status = "‚úÖ OK" if is_postgres_ok else "‚ùå FAILED"
    minio_status = "‚úÖ OK" if is_minio_ok else "‚ùå FAILED"

    report = (
        "<b>ü©∫ Health Check Report:</b>\n\n"
        f"PostgreSQL: {postgres_status}\n"
        f"MinIO (S3): {minio_status}"
    )

    await message.answer(report, parse_mode="HTML")