# src/department_assistant/bot/handlers/direct_commands.py
from aiogram import Router
from aiogram.filters import Command, CommandObject
from aiogram.types import Message
import logging

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
from ...storage.database import check_postgres
from ...storage.s3_storage import check_minio
from ...services.faq_service import add_faq_entry

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø DepartmentAssistant. –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /healthcheck")


@router.message(Command("add_faq"))
async def cmd_add_faq(message: Message, command: CommandObject):
    if not command.args:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π.\n"
                             "–ü—Ä–∏–º–µ—Ä: `/add_faq –ö–∞–∫–æ–≤–∞ —Ñ–æ—Ä–º–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞–º?`")
        return

    faq_text = command.args
    try:
        await add_faq_entry(faq_text)
        await message.answer("‚úÖ –ù–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π!")
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –æ—à–∏–±–∫—É –¥–ª—è —Å–µ–±—è
        logging.error(f"Failed to add FAQ entry: {e}", exc_info=True)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–æ—Å—Ç–æ–µ –∏ –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω.")

@router.message(Command("healthcheck"))
async def cmd_healthcheck(message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
    is_postgres_ok = await check_postgres()
    is_minio_ok = await check_minio()

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    postgres_status = "‚úÖ OK" if is_postgres_ok else "‚ùå FAILED"
    minio_status = "‚úÖ OK" if is_minio_ok else "‚ùå FAILED"

    report = (
        "<b>ü©∫ Health Check Report:</b>\n\n"
        f"PostgreSQL: {postgres_status}\n"
        f"MinIO (S3): {minio_status}"
    )

    await message.answer(report, parse_mode="HTML")